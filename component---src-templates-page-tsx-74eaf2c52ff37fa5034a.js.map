{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/layouts/index.tsx"],"names":["PageTemplate","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_2__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","heights","accent","black","brand","code","gray","calm","copy","dark","lilac","success","ui","bright","light","whisper","warning","white","monospace","sansSerif","serif","lg","md","sm","xl","xs","containerPadding","fontSize","large","regular","headingSizes","h1","h2","h3","h4","lineHeight","heading","header","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","getEmSize","Container","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StyledPage","Page","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","emotion_esm","StyledHeader","styled_base_browser_esm","transparentize","HeaderInner","name","styles","HomepageLink","Link","Header","core_browser_esm","to","StyledLayoutMain","LayoutMain","StyledLayoutRoot","LayoutRoot","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","a","site","siteMetadata","meta","content","description","components_Header","components_LayoutMain","_2720419857"],"mappings":"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","file":"component---src-templates-page-tsx-74eaf2c52ff37fa5034a.js","sourcesContent":["import * as React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport Container from \"../components/Container\";\nimport Page from \"../components/Page\";\nimport IndexLayout from \"../layouts\";\n\ninterface PageTemplateProps {\n\tdata: {\n\t\tsite: {\n\t\t\tsiteMetadata: {\n\t\t\t\ttitle: string;\n\t\t\t\tdescription: string;\n\t\t\t\tauthor: {\n\t\t\t\t\tname: string;\n\t\t\t\t\turl: string;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\tmarkdownRemark: {\n\t\t\thtml: string;\n\t\t\texcerpt: string;\n\t\t\tfrontmatter: {\n\t\t\t\ttitle: string;\n\t\t\t};\n\t\t};\n\t};\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => (\n\t<IndexLayout>\n\t\t<Page>\n\t\t\t<Container>\n\t\t\t\t<h1>{data.markdownRemark.frontmatter.title}</h1>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n\t\t\t</Container>\n\t\t</Page>\n\t</IndexLayout>\n);\n\nexport default PageTemplate;\n\nexport const query = graphql`\n\tquery PageTemplateQuery($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\turl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\texcerpt\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n","/* tslint:disable:max-line-length */\nimport \"typeface-open-sans\";\n\nexport const colors = {\n\taccent: \"#ffb238\",\n\tblack: \"#000\",\n\tbrand: \"#87c64f\",\n\tcode: \"#fcf6f0\",\n\tgray: {\n\t\tcalm: \"rgba(0, 0, 0, 0.54)\",\n\t\tcopy: \"hsla(270, 15.797828016000002%, 0%, 0.88)\",\n\t\tdark: \"hsla(270, 17.119554496%, 0%, 0.92)\",\n\t},\n\tlilac: \"#9d7cbf\",\n\tsuccess: \"#37b635\",\n\tui: {\n\t\tbright: \"#e0d6eb\",\n\t\tlight: \"#f5f3f7\",\n\t\twhisper: \"#fbfafc\",\n\t},\n\twarning: \"#ec1818\",\n\twhite: \"#fff\",\n};\n\nexport const fonts = {\n\tmonospace: \"Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace, monospace\",\n\tsansSerif: \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', Arial, sans-serif\",\n\tserif: \"Georgia, 'Times New Roman', Times, serif\",\n};\n\nexport const breakpoints = {\n\tlg: 992,\n\tmd: 768,\n\tsm: 576,\n\txl: 1200,\n\txs: 0,\n};\n\nexport const widths = {\n\tlg: 960,\n\tmd: 720,\n\txl: 1140,\n};\n\nexport const dimensions = {\n\tcontainerPadding: 1.5,\n\tfontSize: {\n\t\tlarge: 18,\n\t\tregular: 16,\n\t},\n\theadingSizes: {\n\t\th1: 2.441,\n\t\th2: 1.953,\n\t\th3: 1.563,\n\t\th4: 1.25,\n\t},\n\tlineHeight: {\n\t\theading: 1.2,\n\t\tregular: 1.45,\n\t},\n};\n\nexport const heights = {\n\theader: 60,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nimport { getEmSize } from \"../styles/mixins\";\nimport { widths } from \"../styles/variables\";\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps { className?: string }\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n\t<StyledContainer className={className}>{children}</StyledContainer>\n);\n\nexport default Container;\n","import { dimensions } from \"./variables\";\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nimport { dimensions } from \"../styles/variables\";\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n\tclassName?: string;\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => (\n\t<StyledPage className={className}>{children}</StyledPage>\n);\n\nexport default Page;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { injectGlobal } from \"emotion\";\nimport { getEmSize } from \"./mixins\";\nimport { breakpoints, colors, dimensions, fonts } from \"./variables\";\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  .minedAssociationsModal {\n    padding: 3rem;\n  }\n\n  .ratingMatrixModal {\n    max-width: 1200px;\n    padding: 2.8rem;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  h2 {\n    font-size: 1.953rem;\n    border-top: 1px #CFCFCF solid;\n    padding-top: 10px;\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-child(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nimport { Link } from \"gatsby\";\nimport { transparentize } from \"polished\";\n\nimport { colors, dimensions, heights } from \"../styles/variables\";\nimport Container from \"./Container\";\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\ninterface HeaderProps {\n\ttitle: string;\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n\t<StyledHeader>\n\t\t<HeaderInner>\n\t\t\t<HomepageLink to=\"/\">{title}</HomepageLink>\n\t\t</HeaderInner>\n\t</StyledHeader>\n);\n\nexport default Header;\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n\tclassName?: string;\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n\t<StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n\tclassName?: string;\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n\t<StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n);\n\nexport default LayoutRoot;\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\n\nimport { graphql, StaticQuery } from \"gatsby\";\n\nimport \"modern-normalize\";\nimport \"../styles/normalize\";\n\nimport Header from \"../components/Header\";\nimport LayoutMain from \"../components/LayoutMain\";\nimport LayoutRoot from \"../components/LayoutRoot\";\n\ninterface StaticQueryProps {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\ttitle: string;\n\t\t\tdescription: string;\n\t\t},\n\t};\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n\t<StaticQuery\n\t\tquery={graphql`\n\t\t\tquery IndexLayoutQuery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`}\n\t\trender={(data: StaticQueryProps) => (\n\t\t\t<LayoutRoot>\n\t\t\t\t<Helmet\n\t\t\t\t\ttitle={data.site.siteMetadata.title}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{ name: \"description\", content: data.site.siteMetadata.description },\n\t\t\t\t\t\t{ name: \"keywords\", content: \"gatsbyjs, gatsby, javascript, sample, something\" },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Header title={data.site.siteMetadata.title} />\n\t\t\t\t<LayoutMain>{children}</LayoutMain>\n\t\t\t</LayoutRoot>\n\t\t)}\n\t/>\n);\n\nexport default IndexLayout;\n"],"sourceRoot":""}